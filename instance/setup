#!/bin/bash

progress() {
    echo -e "$(tput bold)\n$1$(tput sgr0)"
}

expenv() {
    if [ "$1" == "--append" ]; then
        echo "export" $2"=\${"$2":+\${"$2"}:}"$3 >> ~/.bashrc
    else
        echo "export" $1"="$2 >> ~/.bashrc
    fi
}


cd $(dirname "$0")
set -e

if [ "$(grep -IGnr "YOUR[_A-Z]\+")" != "" ]; then
    progress "Please fill up belows before running this script"
    grep -IGnr "YOUR[_A-Z]\+"
    exit
fi

homedir=/home/ubuntu/
expenv "MLP_HOME" $homedir

efs_mount_point=${homedir}/efs
efs_dns_name="YOUR_EFS_DNS_NAME"


# Install prerequisites
progress "Install Prerequisites"

sudo apt-get update
sudo apt-get install -y --no-install-recommends linux-headers-$(uname -r)
sudo apt-get install -y --no-install-recommends gcc


# Install NFS Client (https://docs.aws.amazon.com/efs/latest/ug)
progress "Install NFS Client"

sudo apt-get -y --no-install-recommends install nfs-common


# Install CUDA 9.1 (https://developer.nvidia.com/cuda-downloads)
progress "Install CUDA 9.1"

cuda_repo=http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64
cuda_deb=cuda-repo-ubuntu1604_9.1.85-1_amd64.deb

wget ${cuda_repo}/${cuda_deb}
sudo dpkg -i ${cuda_deb}
sudo apt-key adv --fetch-keys ${cuda_repo}/7fa2af80.pub
sudo apt-get update
sudo apt-get install -y --no-install-recommends cuda
rm ${cuda_deb}*

expenv --append "PATH" "/usr/local/cuda/bin"
expenv --append "LD_LIBRARY_PATH" "/usr/local/cuda/lib64"

nvidia-smi


# Install Golang 1.9 (https://github.com/golang/go/wiki/Ubuntu)
progress "Install Golang 1.9"

sudo add-apt-repository -y ppa:gophers/archive
sudo apt-get update
sudo apt-get install -y --no-install-recommends golang-1.9-go

mkdir ~/.go

expenv --append "PATH" "/usr/lib/go-1.9/bin"
expenv "GOPATH" "\$HOME/.go"

export PATH=${PATH:+${PATH}:}/usr/lib/go-1.9/bin
export GOPATH=$HOME/.go

go version


# Install Docker (https://docs.docker.com/install/linux/docker-ce/ubuntu)
progress "Install Docker CE"

sudo apt-get install -y --no-install-recommends \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) \
    stable"
sudo apt-get update
sudo apt-get install -y --no-install-recommends docker-ce
sudo usermod -aG docker $USER

expenv "DOCKER_API_VERSION" "1.35"

sudo docker version


# Install NVIDIA-Docker 2.0 (https://github.com/nvidia/nvidia-docker/wiki)
progress "Install NVIDIA Docker 2.0"

curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu16.04/amd64/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update
sudo apt-get install -y --no-install-recommends nvidia-docker2
sudo pkill -SIGHUP dockerd


# Install Tensorflow (Only for Tensorboard) (https://www.tensorflow.org/install/install_linux)
sudo apt-get install -y --no-install-recommends python3-pip python3-dev
sudo pip3 install --upgrade pip
sudo pip3 install tensorflow


# Setup
progress "Setup environment in ${homedir}"

mkdir ${homedir}/efs ${homedir}/src

go get github.com/docker/docker/client
go build -o ${homedir}/runcontainer runcontainer.go
cp save_model.py tester.py start ${homedir}/src/

cd ./dockerfile
sudo ./build tensorflow
sudo docker images

mnt_o="nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev"

echo "${efs_dns_name}:/	${efs_mount_point}	nfs4	${mnt_o}	0 0" |\
    sudo tee -a /etc/fstab

progress "Reboot this instance to finish setup."
